{"version":3,"sources":["../index.js"],"names":["THREE","OrbitControls","require","camera","controls","scene","renderer","container","stats","GUI","DIMENSIONS","SPHERE_RADIUS","SPHERE_MASS","amountOfSpheres","balls","EYE_CANDY_RADIUS","EYE_CANDY_MASS","amountOfEyeCandies","eyeCandies","initGraphics","document","createElement","body","appendChild","PerspectiveCamera","window","innerWidth","innerHeight","position","z","enableZoom","enablePan","enableRotate","addEventListener","render","Scene","add","createCube","i","createSphere","k","eyeCandy","WebGLRenderer","alpha","setSize","domElement","THREEx","FullScreen","bindKey","charCode","charCodeAt","keyboardEvents","Stats","dom","displayGUI","geometry","CubeGeometry","material","MeshBasicMaterial","color","wireframe","mesh","Mesh","BoxHelper","SphereGeometry","set","Math","random","parameters","radius","velocity","Vector3","push","checkWallBoundaries","current","x","setX","y","setY","setZ","intersects","sphere","other","x1","x2","y1","y2","z1","z2","distance","sqrt","checkSphereCollision","length","bVelx","bVely","bVelz","b2Velx","b2Vely","b2Velz","checkCandySphereCollision","cVelx","cVely","cVelz","dat","param","keys","alert","candyVisible","candyColor","spheresVisible","spheresColor","name","candy","addFolder","visibleCandy","onChange","value","visible","colorCandy","addColor","setHex","replace","open","visibleSphere","colorSphere","event","keyCode","animate","requestAnimationFrame","update","clear","Detector","webgl","warning","getWebGLErrorMessage","getElementById"],"mappings":"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","file":"index.js","sourcesContent":["import * as THREE from 'three';\n// import OrbitControls from 'three-orbit-controls';\nlet OrbitControls = require('three-orbit-controls')(THREE);\nimport WindowResize from 'three-window-resize';\n\nlet camera, controls, scene, renderer;\nlet container, stats, GUI;\n\nconst DIMENSIONS = 200;\n\nconst SPHERE_RADIUS = 2;\nconst SPHERE_MASS = 2.0;\nconst amountOfSpheres = 200;\nlet balls = [];\n\nconst EYE_CANDY_RADIUS = 8;\nconst EYE_CANDY_MASS = 8.0;\nconst amountOfEyeCandies = 1;\nlet eyeCandies = [];\n\nlet initGraphics = () => {\n    container = document.createElement('div');\n    document.body.appendChild(container);\n\n    //CAMERA\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\n    camera.position.z = DIMENSIONS * 2.5;\n\n    //CONTROLS THE CAMERA\n    controls = new OrbitControls(camera, container);\n    controls.enableZoom = false;\n    controls.enablePan = false;\n    controls.enableRotate = true;\n    controls.addEventListener('change', render);\n\n    //SCENE\n    scene = new THREE.Scene();\n    scene.add(createCube());\n    for(let i = 0; i < amountOfSpheres; i++) {\n        scene.add(createSphere());\n    }\n    for(let k = 0; k < amountOfEyeCandies; k++) {\n        scene.add(eyeCandy());\n    }\n\n    //RENDERER\n    renderer = new THREE.WebGLRenderer({alpha: false});\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    //EVENTS\n    WindowResize(renderer, camera);\n    THREEx.FullScreen.bindKey({ //only works on chrome and firefox\n        charCode: 'm'.charCodeAt(0)\n    });\n\n    //KEYBOARD EVENTS\n    document.addEventListener('keydown', keyboardEvents, false);\n\n    container.appendChild(renderer.domElement);\n    stats = new Stats();\n    container.appendChild(stats.dom);\n\n    //GUI\n    displayGUI();\n};\n\n// Creating a cube with a set dimension\nlet createCube = () => {\n    let geometry = new THREE.CubeGeometry(DIMENSIONS, DIMENSIONS, DIMENSIONS);\n    let material = new THREE.MeshBasicMaterial({\n        color: 0x000000,\n        wireframe: true\n    });\n    let mesh = new THREE.Mesh(geometry, material);\n    return new THREE.BoxHelper(mesh, 0xffffff);\n};\n\n//Creates a sphere with a random position and a random velocity with a set radius\nlet createSphere = () => {\n    let geometry = new THREE.SphereGeometry(SPHERE_RADIUS, 32, 32);\n    let material = new THREE.MeshBasicMaterial({\n        color: 0x0000ff\n    });\n    let mesh = new THREE.Mesh(geometry, material);\n\n    mesh.position.set((Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2),\n        (Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2),\n        (Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2));\n    mesh.velocity = new THREE.Vector3((Math.random() * 2) - 1, (Math.random() * 2) - 1, (Math.random() * 2) - 1);\n\n    balls.push(mesh);\n    return mesh;\n};\n\n//Creates a big sphere with a random position and a random velocity with a set radius\nlet eyeCandy = () => {\n    let geometry = new THREE.SphereGeometry(EYE_CANDY_RADIUS, 32, 32);\n    let material = new THREE.MeshBasicMaterial({\n        color: 0xff0000\n    });\n    let mesh = new THREE.Mesh(geometry, material);\n\n    mesh.position.set((Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2),\n        (Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2),\n        (Math.random() - 0.5) * (DIMENSIONS - geometry.parameters.radius * 2));\n    mesh.velocity = new THREE.Vector3(0, 0, 0);\n\n    eyeCandies.push(mesh);\n    return mesh;\n};\n\n//Check to see if the position of the ball doesn't go past the wall and also check to see if it's velocity is less than or greater than 0 so it doesn't spike past and get stuck by the edge of the wall\nlet checkWallBoundaries = (current) => {\n    if(current.position.x >= DIMENSIONS / 2 - current.geometry.parameters.radius && current.velocity.x > 0 || current.position.x <= -DIMENSIONS / 2 + current.geometry.parameters.radius && current.velocity.x < 0)\n        current.velocity.setX(-current.velocity.x);\n\n    if(current.position.y >= DIMENSIONS / 2 - current.geometry.parameters.radius && current.velocity.y > 0 || current.position.y <= -DIMENSIONS / 2 + current.geometry.parameters.radius && current.velocity.y < 0)\n        current.velocity.setY(-current.velocity.y);\n\n    if(current.position.z >= DIMENSIONS / 2 - current.geometry.parameters.radius && current.velocity.z > 0 || current.position.z <= -DIMENSIONS / 2 + current.geometry.parameters.radius && current.velocity.z < 0)\n        current.velocity.setZ(-current.velocity.z);\n};\n\n//Check to see if the spheres distance is less than both their radius combined which indicates they intersected\nlet intersects = (sphere, other) => {\n    let x1 = sphere.position.x;\n    let x2 = other.position.x;\n\n    let y1 = sphere.position.y;\n    let y2 = other.position.y;\n\n    let z1 = sphere.position.z;\n    let z2 = other.position.z;\n\n    if ((x1 - x2) >= (sphere.geometry.parameters.radius + other.geometry.parameters.radius) || (y1 - y2) >= (sphere.geometry.parameters.radius + other.geometry.parameters.radius) || (z1 - z2) >= (sphere.geometry.parameters.radius + other.geometry.parameters.radius))\n        return false;\n\n    let distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2) + (z1 - z2) * (z1 - z2));\n\n    return (distance < (sphere.geometry.parameters.radius + other.geometry.parameters.radius));\n};\n\n//Look for any collisions between spheres and if there is apply elastic collision\nlet checkSphereCollision = (current) => {\n    for(let i = current + 1; i < balls.length; i++) {\n        if(intersects(balls[current], balls[i])) {\n            //Used elastic collision formula\n            //v1 = (v1*(m1-m2))/(m1+m2) + (2*v2*m2)/(m1+m2)\n            //v2 = (2*v1*m1)/(m1+m2) - (v2*(m1-m2))/(m1+m2)\n            let bVelx = (2 * SPHERE_MASS * balls[i].velocity.x) / (SPHERE_MASS + SPHERE_MASS);\n            let bVely = (2 * SPHERE_MASS * balls[i].velocity.y) / (SPHERE_MASS + SPHERE_MASS);\n            let bVelz = (2 * SPHERE_MASS * balls[i].velocity.z) / (SPHERE_MASS + SPHERE_MASS);\n            let b2Velx = (2 * balls[current].velocity.x * SPHERE_MASS) / (SPHERE_MASS + SPHERE_MASS);\n            let b2Vely = (2 * balls[current].velocity.y * SPHERE_MASS) / (SPHERE_MASS + SPHERE_MASS);\n            let b2Velz = (2 * balls[current].velocity.z * SPHERE_MASS) / (SPHERE_MASS + SPHERE_MASS);\n            balls[current].velocity.x = bVelx;\n            balls[current].velocity.y = bVely;\n            balls[current].velocity.z = bVelz;\n            balls[i].velocity.x = b2Velx;\n            balls[i].velocity.y = b2Vely;\n            balls[i].velocity.z = b2Velz;\n        }\n    }\n};\n\n//Look for any collisions between sphere and big sphere and if there is apply elastic collision\nlet checkCandySphereCollision = (current) => {\n    for(let i = 0; i < eyeCandies.length; i++) {\n        if(intersects(balls[current], eyeCandies[i])) {\n            //Used elastic collision formula\n            //v1 = (v1*(m1-m2))/(m1+m2) + (2*v2*m2)/(m1+m2)\n            //v2 = (2*v1*m1)/(m1+m2) - (v2*(m1-m2))/(m1+m2)\n            let bVelx = (balls[current].velocity.x * (SPHERE_MASS - EYE_CANDY_MASS)) / (EYE_CANDY_MASS + SPHERE_MASS) + (2 * EYE_CANDY_MASS * eyeCandies[i].velocity.x) / (SPHERE_MASS + EYE_CANDY_MASS);\n            let bVely = (balls[current].velocity.y * (SPHERE_MASS - EYE_CANDY_MASS)) / (EYE_CANDY_MASS + SPHERE_MASS) + (2 * EYE_CANDY_MASS * eyeCandies[i].velocity.y) / (SPHERE_MASS + EYE_CANDY_MASS);\n            let bVelz = (balls[current].velocity.z * (SPHERE_MASS - EYE_CANDY_MASS)) / (EYE_CANDY_MASS + SPHERE_MASS) + (2 * EYE_CANDY_MASS * eyeCandies[i].velocity.z) / (SPHERE_MASS + EYE_CANDY_MASS);\n            let cVelx = (2 * balls[current].velocity.x * SPHERE_MASS) / (EYE_CANDY_MASS + SPHERE_MASS) - (eyeCandies[i].velocity.x * (SPHERE_MASS - EYE_CANDY_MASS)) / (SPHERE_MASS + EYE_CANDY_MASS);\n            let cVely = (2 * balls[current].velocity.y * SPHERE_MASS) / (EYE_CANDY_MASS + SPHERE_MASS) - (eyeCandies[i].velocity.y * (SPHERE_MASS - EYE_CANDY_MASS)) / (SPHERE_MASS + EYE_CANDY_MASS);\n            let cVelz = (2 * balls[current].velocity.z * SPHERE_MASS) / (EYE_CANDY_MASS + SPHERE_MASS) - (eyeCandies[i].velocity.z * (SPHERE_MASS - EYE_CANDY_MASS)) / (SPHERE_MASS + EYE_CANDY_MASS);\n            balls[current].velocity.x = bVelx;\n            balls[current].velocity.y = bVely;\n            balls[current].velocity.z = bVelz;\n            eyeCandies[i].velocity.x = cVelx;\n            eyeCandies[i].velocity.y = cVely;\n            eyeCandies[i].velocity.z = cVelz;\n        }\n    }\n};\n\n//Displays a GUI with controls to toggle the visibility and color of the spheres\nlet displayGUI = () => {\n    GUI = new dat.GUI();\n    let param = {\n        keys: function() {\n            alert(\"H: Hides the controller\" + \"\\n\" + \"Z: Enables and disables zoom\" + \"\\n\" + \"P: Enables and disables pan\" + \"\\n\" + \"R: Enables and disables rotation\" + \"\\n\" + \"M: Enables FullScreen\");\n        },\n        candyVisible: true,\n        candyColor: \"#ff0000\",\n        spheresVisible: true,\n        spheresColor: \"#0000ff\"\n    };\n\n    GUI.add(param, 'keys').name(\"Key Controls\");\n\n    //Folder for candy controls\n    let candy = GUI.addFolder(\"Bigger Particle\");\n    let visibleCandy = candy.add(param, 'candyVisible').name(\"Visible\");\n    visibleCandy.onChange(function (value) {\n        for(let i = 0; i < eyeCandies.length; i++) {\n            eyeCandies[i].visible = value;\n        }\n    });\n    let colorCandy = candy.addColor(param, 'candyColor').name(\"Color\");\n    colorCandy.onChange(function (value) {\n        for(let i = 0; i < eyeCandies.length; i++) {\n            eyeCandies[i].material.color.setHex(value.replace(\"#\", \"0x\"));\n        }\n    });\n    candy.open();\n\n    //Folder for balls controls\n    let sphere = GUI.addFolder(\"Smaller Particles\");\n    let visibleSphere = sphere.add(param, 'spheresVisible').name(\"Visible\");\n    visibleSphere.onChange(function (value) {\n        for(let i = 0; i < balls.length; i++) {\n            balls[i].visible = value;\n        }\n    });\n    let colorSphere = sphere.addColor(param, 'spheresColor').name(\"Color\");\n    colorSphere.onChange(function (value) {\n        for(let i = 0; i < balls.length; i++) {\n            balls[i].material.color.setHex(value.replace(\"#\", \"0x\"));\n        }\n    });\n    sphere.open();\n\n    GUI.open();\n};\n\n//Add keyboard events\nlet keyboardEvents = () => {\n    if(event.keyCode === 81) //letter Q toggles visibility of smaller spheres\n        for(let i = 0; i < balls.length; i++)\n            balls[i].visible = !balls[i].visible;\n\n    if(event.keyCode === 87) //letter W toggles visibility of bigger sphere\n        for(let k = 0; k < eyeCandies.length; k++)\n            eyeCandies[k].visible = !eyeCandies[k].visible;\n\n    if(event.keyCode === 90) //letter Z toggles zoom\n        controls.enableZoom = !controls.enableZoom;\n\n    if(event.keyCode === 80) //letter P toggles panning\n        controls.enablePan = !controls.enablePan;\n\n    if(event.keyCode === 82) //letter R toggles rotation\n        controls.enableRotate = !controls.enableRotate;\n};\n\nlet animate = () => {\n    //goes through every ball and checks for wall boundaries and collision\n    for(let i = 0; i < balls.length; i++) {\n        balls[i].position.add(balls[i].velocity);\n        checkWallBoundaries(balls[i]);\n        checkSphereCollision(i);\n        checkCandySphereCollision(i);\n    }\n\n    //checks to see if the big sphere collided with the wall\n    for(let k = 0; k < eyeCandies.length; k++) {\n        eyeCandies[k].position.add(eyeCandies[k].velocity);\n        checkWallBoundaries(eyeCandies[k]);\n    }\n\n    requestAnimationFrame(animate);\n    renderer.render(scene, camera);\n\n    controls.update();\n    stats.update();\n};\n\nlet render = () => {\n    renderer.clear();\n    renderer.render(scene, camera);\n};\n\nif(Detector.webgl) {\n    initGraphics();\n    animate();\n} else {\n    let warning = Detector.getWebGLErrorMessage();\n    document.getElementById('container').appendChild(warning);\n}"]}